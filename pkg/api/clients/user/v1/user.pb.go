// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user.proto

package userproto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SignInMethod int32

const (
	SignInMethod_EMAIL SignInMethod = 0
	SignInMethod_PHONE SignInMethod = 1
)

var SignInMethod_name = map[int32]string{
	0: "EMAIL",
	1: "PHONE",
}

var SignInMethod_value = map[string]int32{
	"EMAIL": 0,
	"PHONE": 1,
}

func (x SignInMethod) String() string {
	return proto.EnumName(SignInMethod_name, int32(x))
}

func (SignInMethod) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{0}
}

type VerifyState int32

const (
	VerifyState_SUCCESS VerifyState = 0
	VerifyState_REFRESH VerifyState = 1
	VerifyState_ILLEGAL VerifyState = 2
)

var VerifyState_name = map[int32]string{
	0: "SUCCESS",
	1: "REFRESH",
	2: "ILLEGAL",
}

var VerifyState_value = map[string]int32{
	"SUCCESS": 0,
	"REFRESH": 1,
	"ILLEGAL": 2,
}

func (x VerifyState) String() string {
	return proto.EnumName(VerifyState_name, int32(x))
}

func (VerifyState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{1}
}

type Acknowledgement struct {
	Acknowledgement      string   `protobuf:"bytes,1,opt,name=acknowledgement,proto3" json:"acknowledgement,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Acknowledgement) Reset()         { *m = Acknowledgement{} }
func (m *Acknowledgement) String() string { return proto.CompactTextString(m) }
func (*Acknowledgement) ProtoMessage()    {}
func (*Acknowledgement) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{0}
}

func (m *Acknowledgement) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Acknowledgement.Unmarshal(m, b)
}
func (m *Acknowledgement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Acknowledgement.Marshal(b, m, deterministic)
}
func (m *Acknowledgement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Acknowledgement.Merge(m, src)
}
func (m *Acknowledgement) XXX_Size() int {
	return xxx_messageInfo_Acknowledgement.Size(m)
}
func (m *Acknowledgement) XXX_DiscardUnknown() {
	xxx_messageInfo_Acknowledgement.DiscardUnknown(m)
}

var xxx_messageInfo_Acknowledgement proto.InternalMessageInfo

func (m *Acknowledgement) GetAcknowledgement() string {
	if m != nil {
		return m.Acknowledgement
	}
	return ""
}

type User struct {
	Id                   string   `protobuf:"bytes,12,opt,name=id,proto3" json:"id,omitempty"`
	FirstName            string   `protobuf:"bytes,1,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName             string   `protobuf:"bytes,2,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	Email                string   `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Phone                string   `protobuf:"bytes,4,opt,name=phone,proto3" json:"phone,omitempty"`
	Ic                   string   `protobuf:"bytes,5,opt,name=ic,proto3" json:"ic,omitempty"`
	EmailValidation      bool     `protobuf:"varint,6,opt,name=email_validation,json=emailValidation,proto3" json:"email_validation,omitempty"`
	PhoneValidation      bool     `protobuf:"varint,7,opt,name=phone_validation,json=phoneValidation,proto3" json:"phone_validation,omitempty"`
	IcValidation         bool     `protobuf:"varint,8,opt,name=ic_validation,json=icValidation,proto3" json:"ic_validation,omitempty"`
	Year                 uint32   `protobuf:"varint,9,opt,name=year,proto3" json:"year,omitempty"`
	Month                uint32   `protobuf:"varint,10,opt,name=month,proto3" json:"month,omitempty"`
	Day                  uint32   `protobuf:"varint,11,opt,name=day,proto3" json:"day,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{1}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *User) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *User) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *User) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *User) GetIc() string {
	if m != nil {
		return m.Ic
	}
	return ""
}

func (m *User) GetEmailValidation() bool {
	if m != nil {
		return m.EmailValidation
	}
	return false
}

func (m *User) GetPhoneValidation() bool {
	if m != nil {
		return m.PhoneValidation
	}
	return false
}

func (m *User) GetIcValidation() bool {
	if m != nil {
		return m.IcValidation
	}
	return false
}

func (m *User) GetYear() uint32 {
	if m != nil {
		return m.Year
	}
	return 0
}

func (m *User) GetMonth() uint32 {
	if m != nil {
		return m.Month
	}
	return 0
}

func (m *User) GetDay() uint32 {
	if m != nil {
		return m.Day
	}
	return 0
}

type UpdateUser struct {
	FirstName            string   `protobuf:"bytes,1,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	Email                string   `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Phone                string   `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
	Ic                   string   `protobuf:"bytes,4,opt,name=ic,proto3" json:"ic,omitempty"`
	Year                 int32    `protobuf:"varint,5,opt,name=year,proto3" json:"year,omitempty"`
	Month                int32    `protobuf:"varint,6,opt,name=month,proto3" json:"month,omitempty"`
	Day                  int32    `protobuf:"varint,7,opt,name=day,proto3" json:"day,omitempty"`
	Password             string   `protobuf:"bytes,8,opt,name=password,proto3" json:"password,omitempty"`
	LastName             string   `protobuf:"bytes,9,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateUser) Reset()         { *m = UpdateUser{} }
func (m *UpdateUser) String() string { return proto.CompactTextString(m) }
func (*UpdateUser) ProtoMessage()    {}
func (*UpdateUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{2}
}

func (m *UpdateUser) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateUser.Unmarshal(m, b)
}
func (m *UpdateUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateUser.Marshal(b, m, deterministic)
}
func (m *UpdateUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateUser.Merge(m, src)
}
func (m *UpdateUser) XXX_Size() int {
	return xxx_messageInfo_UpdateUser.Size(m)
}
func (m *UpdateUser) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateUser.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateUser proto.InternalMessageInfo

func (m *UpdateUser) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *UpdateUser) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *UpdateUser) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *UpdateUser) GetIc() string {
	if m != nil {
		return m.Ic
	}
	return ""
}

func (m *UpdateUser) GetYear() int32 {
	if m != nil {
		return m.Year
	}
	return 0
}

func (m *UpdateUser) GetMonth() int32 {
	if m != nil {
		return m.Month
	}
	return 0
}

func (m *UpdateUser) GetDay() int32 {
	if m != nil {
		return m.Day
	}
	return 0
}

func (m *UpdateUser) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *UpdateUser) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

type GetItQECRegister struct {
	Phone                string   `protobuf:"bytes,1,opt,name=phone,proto3" json:"phone,omitempty"`
	Email                string   `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	UserID               string   `protobuf:"bytes,3,opt,name=userID,proto3" json:"userID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetItQECRegister) Reset()         { *m = GetItQECRegister{} }
func (m *GetItQECRegister) String() string { return proto.CompactTextString(m) }
func (*GetItQECRegister) ProtoMessage()    {}
func (*GetItQECRegister) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{3}
}

func (m *GetItQECRegister) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetItQECRegister.Unmarshal(m, b)
}
func (m *GetItQECRegister) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetItQECRegister.Marshal(b, m, deterministic)
}
func (m *GetItQECRegister) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetItQECRegister.Merge(m, src)
}
func (m *GetItQECRegister) XXX_Size() int {
	return xxx_messageInfo_GetItQECRegister.Size(m)
}
func (m *GetItQECRegister) XXX_DiscardUnknown() {
	xxx_messageInfo_GetItQECRegister.DiscardUnknown(m)
}

var xxx_messageInfo_GetItQECRegister proto.InternalMessageInfo

func (m *GetItQECRegister) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *GetItQECRegister) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *GetItQECRegister) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

type VerifyRequest struct {
	Data                 string   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VerifyRequest) Reset()         { *m = VerifyRequest{} }
func (m *VerifyRequest) String() string { return proto.CompactTextString(m) }
func (*VerifyRequest) ProtoMessage()    {}
func (*VerifyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{4}
}

func (m *VerifyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VerifyRequest.Unmarshal(m, b)
}
func (m *VerifyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VerifyRequest.Marshal(b, m, deterministic)
}
func (m *VerifyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VerifyRequest.Merge(m, src)
}
func (m *VerifyRequest) XXX_Size() int {
	return xxx_messageInfo_VerifyRequest.Size(m)
}
func (m *VerifyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VerifyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VerifyRequest proto.InternalMessageInfo

func (m *VerifyRequest) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func (m *VerifyRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type VerifyResponse struct {
	Data                 string   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VerifyResponse) Reset()         { *m = VerifyResponse{} }
func (m *VerifyResponse) String() string { return proto.CompactTextString(m) }
func (*VerifyResponse) ProtoMessage()    {}
func (*VerifyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{5}
}

func (m *VerifyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VerifyResponse.Unmarshal(m, b)
}
func (m *VerifyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VerifyResponse.Marshal(b, m, deterministic)
}
func (m *VerifyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VerifyResponse.Merge(m, src)
}
func (m *VerifyResponse) XXX_Size() int {
	return xxx_messageInfo_VerifyResponse.Size(m)
}
func (m *VerifyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VerifyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VerifyResponse proto.InternalMessageInfo

func (m *VerifyResponse) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type TotalUser struct {
	Count                int32    `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TotalUser) Reset()         { *m = TotalUser{} }
func (m *TotalUser) String() string { return proto.CompactTextString(m) }
func (*TotalUser) ProtoMessage()    {}
func (*TotalUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{6}
}

func (m *TotalUser) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TotalUser.Unmarshal(m, b)
}
func (m *TotalUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TotalUser.Marshal(b, m, deterministic)
}
func (m *TotalUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TotalUser.Merge(m, src)
}
func (m *TotalUser) XXX_Size() int {
	return xxx_messageInfo_TotalUser.Size(m)
}
func (m *TotalUser) XXX_DiscardUnknown() {
	xxx_messageInfo_TotalUser.DiscardUnknown(m)
}

var xxx_messageInfo_TotalUser proto.InternalMessageInfo

func (m *TotalUser) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func init() {
	proto.RegisterEnum("userproto.SignInMethod", SignInMethod_name, SignInMethod_value)
	proto.RegisterEnum("userproto.VerifyState", VerifyState_name, VerifyState_value)
	proto.RegisterType((*Acknowledgement)(nil), "userproto.Acknowledgement")
	proto.RegisterType((*User)(nil), "userproto.User")
	proto.RegisterType((*UpdateUser)(nil), "userproto.UpdateUser")
	proto.RegisterType((*GetItQECRegister)(nil), "userproto.GetItQECRegister")
	proto.RegisterType((*VerifyRequest)(nil), "userproto.VerifyRequest")
	proto.RegisterType((*VerifyResponse)(nil), "userproto.VerifyResponse")
	proto.RegisterType((*TotalUser)(nil), "userproto.TotalUser")
}

func init() {
	proto.RegisterFile("user.proto", fileDescriptor_116e343673f7ffaf)
}

var fileDescriptor_116e343673f7ffaf = []byte{
	// 991 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x55, 0x41, 0x53, 0xdb, 0x56,
	0x10, 0xb6, 0x0c, 0xb6, 0xf1, 0x62, 0xb0, 0xfb, 0x80, 0x44, 0x11, 0xcd, 0x8c, 0xaa, 0xe6, 0x40,
	0x99, 0x46, 0x4a, 0x09, 0x27, 0x72, 0x09, 0x38, 0x2e, 0x78, 0x06, 0xd2, 0x54, 0x8e, 0xe9, 0x91,
	0x0a, 0x69, 0x91, 0x5f, 0x6b, 0xeb, 0x29, 0xd2, 0x33, 0x84, 0xc9, 0xe4, 0xd2, 0x9f, 0xd0, 0xde,
	0xfa, 0x5f, 0x7a, 0xec, 0x2f, 0xe8, 0xb5, 0xc7, 0xfe, 0x82, 0x1e, 0x7a, 0xee, 0xbc, 0x95, 0x6c,
	0x64, 0xa0, 0x69, 0x87, 0xe9, 0x05, 0xde, 0x7e, 0xbb, 0xda, 0x6f, 0xdf, 0xb7, 0xfb, 0xd6, 0x00,
	0xe3, 0x14, 0x13, 0x3b, 0x4e, 0x84, 0x14, 0xac, 0xae, 0xce, 0x74, 0x34, 0x3e, 0x0e, 0x85, 0x08,
	0x87, 0xe8, 0x78, 0x31, 0x77, 0xbc, 0x28, 0x12, 0xd2, 0x93, 0x5c, 0x44, 0x69, 0x16, 0x68, 0x7c,
	0x4e, 0xff, 0xfc, 0xc7, 0x21, 0x46, 0x8f, 0xd3, 0x0b, 0x2f, 0x0c, 0x31, 0x71, 0x44, 0x4c, 0x11,
	0xb7, 0x44, 0xaf, 0xe7, 0xb9, 0xc8, 0x3a, 0x1d, 0x9f, 0x39, 0x38, 0x8a, 0xe5, 0x65, 0xe6, 0xb4,
	0x9e, 0x41, 0x73, 0xd7, 0xff, 0x3e, 0x12, 0x17, 0x43, 0x0c, 0x42, 0x1c, 0x61, 0x24, 0xd9, 0x06,
	0x34, 0xbd, 0x59, 0x48, 0xd7, 0x4c, 0x6d, 0xa3, 0xee, 0x5e, 0x87, 0xad, 0x5f, 0xcb, 0x30, 0xdf,
	0x4f, 0x31, 0x61, 0xcb, 0x50, 0xe6, 0x81, 0xde, 0xa0, 0xa8, 0x32, 0x0f, 0xd8, 0x43, 0x80, 0x33,
	0x9e, 0xa4, 0xf2, 0x24, 0xf2, 0x46, 0x98, 0x7f, 0x5d, 0x27, 0xe4, 0xa5, 0x37, 0x42, 0xb6, 0x0e,
	0xf5, 0xa1, 0x37, 0xf1, 0x96, 0xc9, 0xbb, 0xa0, 0x00, 0x72, 0xae, 0x42, 0x05, 0x47, 0x1e, 0x1f,
	0xea, 0x73, 0xe4, 0xc8, 0x0c, 0x85, 0xc6, 0x03, 0x11, 0xa1, 0x3e, 0x9f, 0xa1, 0x64, 0x10, 0xaf,
	0xaf, 0x57, 0x72, 0x5e, 0x9f, 0x7d, 0x06, 0x2d, 0x0a, 0x3f, 0x39, 0xf7, 0x86, 0x3c, 0x20, 0x15,
	0xf4, 0xaa, 0xa9, 0x6d, 0x2c, 0xb8, 0x4d, 0xc2, 0x8f, 0xa7, 0xb0, 0x0a, 0xa5, 0x1c, 0xc5, 0xd0,
	0x5a, 0x16, 0x4a, 0x78, 0x21, 0xf4, 0x53, 0x58, 0xe2, 0x7e, 0x31, 0x6e, 0x81, 0xe2, 0x1a, 0xdc,
	0x2f, 0x04, 0x31, 0x98, 0xbf, 0x44, 0x2f, 0xd1, 0xeb, 0xa6, 0xb6, 0xb1, 0xe4, 0xd2, 0x59, 0x15,
	0x3d, 0x12, 0x91, 0x1c, 0xe8, 0x40, 0x60, 0x66, 0xb0, 0x16, 0xcc, 0x05, 0xde, 0xa5, 0xbe, 0x48,
	0x98, 0x3a, 0x5a, 0xbf, 0x6b, 0x00, 0xfd, 0x38, 0xf0, 0x24, 0x92, 0x9a, 0xff, 0xa2, 0xde, 0x54,
	0xa0, 0xf2, 0xad, 0x02, 0xcd, 0xdd, 0x14, 0x68, 0x7e, 0x2a, 0xd0, 0xa4, 0x4a, 0x25, 0x59, 0xe5,
	0x7a, 0x95, 0x55, 0x02, 0x67, 0xab, 0xac, 0x11, 0xa6, 0x8e, 0xcc, 0x80, 0x85, 0xd8, 0x4b, 0xd3,
	0x0b, 0x91, 0x04, 0xa4, 0x40, 0xdd, 0x9d, 0xda, 0xb3, 0x1d, 0xad, 0xcf, 0x76, 0xd4, 0x3a, 0x86,
	0xd6, 0x3e, 0xca, 0xae, 0xfc, 0xba, 0xd3, 0x76, 0x31, 0xe4, 0xa9, 0xc4, 0xe4, 0xaa, 0x5c, 0xad,
	0x58, 0xee, 0xed, 0x57, 0xbb, 0x07, 0x55, 0xf5, 0x32, 0xba, 0x2f, 0xf2, 0xbb, 0xe5, 0x96, 0xf5,
	0x14, 0x96, 0x8e, 0x31, 0xe1, 0x67, 0x97, 0x2e, 0xbe, 0x19, 0x63, 0x2a, 0xd5, 0xed, 0x02, 0x4f,
	0x7a, 0x79, 0x4e, 0x3a, 0xe7, 0xa3, 0x59, 0x9e, 0x8c, 0xa6, 0xf5, 0x08, 0x96, 0x27, 0x1f, 0xa5,
	0xb1, 0x88, 0x52, 0xbc, 0xed, 0x2b, 0xeb, 0x13, 0xa8, 0xbf, 0x16, 0xd2, 0x1b, 0x52, 0x3f, 0x56,
	0xa1, 0xe2, 0x8b, 0x71, 0xfe, 0x0c, 0x2a, 0x6e, 0x66, 0x6c, 0x3e, 0x82, 0x46, 0x8f, 0x87, 0x51,
	0x37, 0x3a, 0x42, 0x39, 0x10, 0x01, 0xab, 0x43, 0xa5, 0x73, 0xb4, 0xdb, 0x3d, 0x6c, 0x95, 0xd4,
	0xf1, 0xd5, 0xc1, 0x57, 0x2f, 0x3b, 0x2d, 0x6d, 0x73, 0x1b, 0x16, 0x33, 0xba, 0x9e, 0xf4, 0x24,
	0xb2, 0x45, 0xa8, 0xf5, 0xfa, 0xed, 0x76, 0xa7, 0xd7, 0x6b, 0x95, 0x94, 0xe1, 0x76, 0xbe, 0x74,
	0x3b, 0xbd, 0x83, 0x96, 0xa6, 0x8c, 0xee, 0xe1, 0x61, 0x67, 0x7f, 0xf7, 0xb0, 0x55, 0xde, 0xfa,
	0xab, 0x06, 0x8b, 0x8a, 0xba, 0x87, 0xc9, 0x39, 0xf7, 0x91, 0xb5, 0xa1, 0x9a, 0xf2, 0x30, 0xea,
	0xc7, 0x6c, 0xdd, 0x9e, 0x2e, 0x09, 0xfb, 0xba, 0xa8, 0x86, 0x51, 0x70, 0x5e, 0x7b, 0xd5, 0x56,
	0x89, 0x1d, 0x40, 0x2d, 0x44, 0x49, 0x37, 0x6a, 0x16, 0x02, 0x15, 0x60, 0x5c, 0x07, 0xac, 0xf5,
	0x1f, 0x7e, 0xfb, 0xe3, 0xa7, 0xf2, 0x1a, 0x5b, 0xa1, 0x15, 0xa4, 0x9c, 0xd9, 0x9f, 0x77, 0x3c,
	0x78, 0xcf, 0x5e, 0x03, 0x8c, 0xaf, 0xc6, 0xf5, 0x46, 0xb2, 0x0f, 0x95, 0xf1, 0x80, 0xf2, 0xae,
	0x18, 0xcb, 0xb3, 0x79, 0x77, 0xb4, 0x4d, 0xf6, 0x2d, 0xb0, 0x24, 0x6b, 0x64, 0xa6, 0x58, 0x27,
	0x6b, 0xbe, 0x9d, 0xad, 0x2f, 0x7b, 0xb2, 0xbe, 0xec, 0x8e, 0x5a, 0x5f, 0xc6, 0x83, 0x02, 0xc9,
	0x6c, 0x43, 0xad, 0xfb, 0xc4, 0xf1, 0x11, 0x6b, 0x3a, 0x34, 0x3f, 0xa9, 0x93, 0x9c, 0x53, 0x00,
	0x3b, 0x85, 0x95, 0x19, 0x86, 0x23, 0x71, 0xca, 0x87, 0x78, 0x17, 0x0a, 0x9d, 0x28, 0x18, 0x6b,
	0x39, 0x23, 0xca, 0x71, 0xc5, 0x11, 0xc1, 0xda, 0x0c, 0x47, 0x37, 0xc0, 0x48, 0x72, 0x79, 0xc9,
	0xf4, 0x5b, 0xb2, 0x51, 0xdc, 0x87, 0x78, 0x4c, 0xe2, 0x31, 0x98, 0xee, 0xf0, 0x3c, 0xcf, 0x84,
	0xc8, 0x79, 0xa7, 0x06, 0xf5, 0x3d, 0xf3, 0x60, 0xf1, 0xbc, 0x20, 0xd7, 0x9d, 0x58, 0x1e, 0x12,
	0xcb, 0x7d, 0xb6, 0x36, 0x11, 0x6c, 0x96, 0xe2, 0x04, 0x1a, 0xe7, 0x45, 0xbd, 0xee, 0xc4, 0x61,
	0x10, 0xc7, 0xaa, 0xd5, 0x9c, 0x2a, 0x96, 0xe5, 0x54, 0x9d, 0x3f, 0x84, 0x15, 0x2f, 0x18, 0xf1,
	0xe8, 0xff, 0x50, 0xac, 0xc4, 0xb6, 0xa0, 0x41, 0xd9, 0xf6, 0xff, 0xf3, 0xb0, 0x97, 0xd8, 0x73,
	0x68, 0xd2, 0x37, 0xfd, 0x3b, 0x8e, 0x75, 0x89, 0xbd, 0x00, 0x36, 0x61, 0xa5, 0xcd, 0xd1, 0x56,
	0x4b, 0xe2, 0x1f, 0x47, 0x6b, 0xb5, 0x90, 0x6b, 0xba, 0x68, 0xac, 0xd2, 0xde, 0x9f, 0xda, 0x8f,
	0xbb, 0xbf, 0x68, 0xec, 0x1b, 0x68, 0x28, 0xc0, 0x4c, 0xb3, 0xf7, 0x6f, 0xed, 0xc1, 0x5a, 0x88,
	0x92, 0xcb, 0x37, 0xe8, 0x9b, 0xe3, 0x82, 0x83, 0xad, 0x0e, 0xa4, 0x8c, 0xd3, 0x1d, 0xc7, 0x99,
	0xb8, 0x6d, 0x5f, 0x8c, 0x8c, 0x95, 0x8b, 0xb7, 0x76, 0x7b, 0x80, 0xf8, 0x5c, 0xa1, 0x39, 0xb8,
	0x35, 0xf7, 0x85, 0xfd, 0x64, 0x53, 0x2b, 0x6f, 0xb5, 0xbc, 0x38, 0x1e, 0x72, 0x9f, 0x7e, 0xb5,
	0x9c, 0xef, 0x52, 0x11, 0xed, 0xdc, 0x40, 0xdc, 0x67, 0x30, 0xb7, 0xfd, 0x64, 0x9b, 0x6d, 0xc3,
	0xa6, 0x8b, 0x72, 0x9c, 0x44, 0x18, 0x98, 0x17, 0x03, 0x8c, 0x4c, 0x39, 0x40, 0x33, 0xc1, 0x54,
	0x8c, 0x13, 0x1f, 0xcd, 0x40, 0x60, 0x6a, 0x46, 0x42, 0x9a, 0xf8, 0x96, 0xa7, 0xd2, 0x66, 0x55,
	0x98, 0xff, 0xb9, 0xac, 0xd5, 0xe0, 0x9e, 0x2f, 0x46, 0xf6, 0xb4, 0x9e, 0xfe, 0xe4, 0x9e, 0x7b,
	0x6b, 0xbb, 0x63, 0x39, 0x50, 0xad, 0xcd, 0x98, 0xf2, 0xdd, 0xf6, 0x4a, 0x3b, 0xad, 0x92, 0xff,
	0xe9, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x71, 0x3c, 0x1e, 0x07, 0x0c, 0x09, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// UserServiceClient is the client API for UserService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserServiceClient interface {
	// reuqest response
	SignUp(ctx context.Context, in *GetItQECRegister, opts ...grpc.CallOption) (*Acknowledgement, error)
	GetUser(ctx context.Context, in *User, opts ...grpc.CallOption) (*User, error)
	UpdateUser(ctx context.Context, in *User, opts ...grpc.CallOption) (*Acknowledgement, error)
	// request email verification link
	RequestVerifyEmail(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*VerifyResponse, error)
	// request mobile verification code
	RequestVerifyMobile(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*VerifyResponse, error)
	// request identity verification code
	RequestVerifyIdentity(ctx context.Context, in *VerifyRequest, opts ...grpc.CallOption) (*VerifyResponse, error)
	// email verification link
	VerifyEmail(ctx context.Context, in *VerifyRequest, opts ...grpc.CallOption) (*VerifyResponse, error)
	// mobile verification code
	VerifyMobile(ctx context.Context, in *VerifyRequest, opts ...grpc.CallOption) (*VerifyResponse, error)
	// verify its IC
	AdminVerifyIdentity(ctx context.Context, in *VerifyRequest, opts ...grpc.CallOption) (*VerifyResponse, error)
	AdminGetUser(ctx context.Context, in *User, opts ...grpc.CallOption) (*User, error)
	AdminUpdateUser(ctx context.Context, in *User, opts ...grpc.CallOption) (*Acknowledgement, error)
	// rpc adminQueryUsers()
	// rpc admin
	AdminGetTotalCount(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*TotalUser, error)
}

type userServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewUserServiceClient(cc grpc.ClientConnInterface) UserServiceClient {
	return &userServiceClient{cc}
}

func (c *userServiceClient) SignUp(ctx context.Context, in *GetItQECRegister, opts ...grpc.CallOption) (*Acknowledgement, error) {
	out := new(Acknowledgement)
	err := c.cc.Invoke(ctx, "/userproto.UserService/signUp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) GetUser(ctx context.Context, in *User, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/userproto.UserService/getUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) UpdateUser(ctx context.Context, in *User, opts ...grpc.CallOption) (*Acknowledgement, error) {
	out := new(Acknowledgement)
	err := c.cc.Invoke(ctx, "/userproto.UserService/updateUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) RequestVerifyEmail(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*VerifyResponse, error) {
	out := new(VerifyResponse)
	err := c.cc.Invoke(ctx, "/userproto.UserService/requestVerifyEmail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) RequestVerifyMobile(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*VerifyResponse, error) {
	out := new(VerifyResponse)
	err := c.cc.Invoke(ctx, "/userproto.UserService/requestVerifyMobile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) RequestVerifyIdentity(ctx context.Context, in *VerifyRequest, opts ...grpc.CallOption) (*VerifyResponse, error) {
	out := new(VerifyResponse)
	err := c.cc.Invoke(ctx, "/userproto.UserService/requestVerifyIdentity", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) VerifyEmail(ctx context.Context, in *VerifyRequest, opts ...grpc.CallOption) (*VerifyResponse, error) {
	out := new(VerifyResponse)
	err := c.cc.Invoke(ctx, "/userproto.UserService/verifyEmail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) VerifyMobile(ctx context.Context, in *VerifyRequest, opts ...grpc.CallOption) (*VerifyResponse, error) {
	out := new(VerifyResponse)
	err := c.cc.Invoke(ctx, "/userproto.UserService/verifyMobile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) AdminVerifyIdentity(ctx context.Context, in *VerifyRequest, opts ...grpc.CallOption) (*VerifyResponse, error) {
	out := new(VerifyResponse)
	err := c.cc.Invoke(ctx, "/userproto.UserService/adminVerifyIdentity", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) AdminGetUser(ctx context.Context, in *User, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/userproto.UserService/adminGetUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) AdminUpdateUser(ctx context.Context, in *User, opts ...grpc.CallOption) (*Acknowledgement, error) {
	out := new(Acknowledgement)
	err := c.cc.Invoke(ctx, "/userproto.UserService/adminUpdateUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) AdminGetTotalCount(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*TotalUser, error) {
	out := new(TotalUser)
	err := c.cc.Invoke(ctx, "/userproto.UserService/adminGetTotalCount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserServiceServer is the server API for UserService service.
type UserServiceServer interface {
	// reuqest response
	SignUp(context.Context, *GetItQECRegister) (*Acknowledgement, error)
	GetUser(context.Context, *User) (*User, error)
	UpdateUser(context.Context, *User) (*Acknowledgement, error)
	// request email verification link
	RequestVerifyEmail(context.Context, *empty.Empty) (*VerifyResponse, error)
	// request mobile verification code
	RequestVerifyMobile(context.Context, *empty.Empty) (*VerifyResponse, error)
	// request identity verification code
	RequestVerifyIdentity(context.Context, *VerifyRequest) (*VerifyResponse, error)
	// email verification link
	VerifyEmail(context.Context, *VerifyRequest) (*VerifyResponse, error)
	// mobile verification code
	VerifyMobile(context.Context, *VerifyRequest) (*VerifyResponse, error)
	// verify its IC
	AdminVerifyIdentity(context.Context, *VerifyRequest) (*VerifyResponse, error)
	AdminGetUser(context.Context, *User) (*User, error)
	AdminUpdateUser(context.Context, *User) (*Acknowledgement, error)
	// rpc adminQueryUsers()
	// rpc admin
	AdminGetTotalCount(context.Context, *empty.Empty) (*TotalUser, error)
}

// UnimplementedUserServiceServer can be embedded to have forward compatible implementations.
type UnimplementedUserServiceServer struct {
}

func (*UnimplementedUserServiceServer) SignUp(ctx context.Context, req *GetItQECRegister) (*Acknowledgement, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SignUp not implemented")
}
func (*UnimplementedUserServiceServer) GetUser(ctx context.Context, req *User) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUser not implemented")
}
func (*UnimplementedUserServiceServer) UpdateUser(ctx context.Context, req *User) (*Acknowledgement, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateUser not implemented")
}
func (*UnimplementedUserServiceServer) RequestVerifyEmail(ctx context.Context, req *empty.Empty) (*VerifyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RequestVerifyEmail not implemented")
}
func (*UnimplementedUserServiceServer) RequestVerifyMobile(ctx context.Context, req *empty.Empty) (*VerifyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RequestVerifyMobile not implemented")
}
func (*UnimplementedUserServiceServer) RequestVerifyIdentity(ctx context.Context, req *VerifyRequest) (*VerifyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RequestVerifyIdentity not implemented")
}
func (*UnimplementedUserServiceServer) VerifyEmail(ctx context.Context, req *VerifyRequest) (*VerifyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VerifyEmail not implemented")
}
func (*UnimplementedUserServiceServer) VerifyMobile(ctx context.Context, req *VerifyRequest) (*VerifyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VerifyMobile not implemented")
}
func (*UnimplementedUserServiceServer) AdminVerifyIdentity(ctx context.Context, req *VerifyRequest) (*VerifyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AdminVerifyIdentity not implemented")
}
func (*UnimplementedUserServiceServer) AdminGetUser(ctx context.Context, req *User) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AdminGetUser not implemented")
}
func (*UnimplementedUserServiceServer) AdminUpdateUser(ctx context.Context, req *User) (*Acknowledgement, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AdminUpdateUser not implemented")
}
func (*UnimplementedUserServiceServer) AdminGetTotalCount(ctx context.Context, req *empty.Empty) (*TotalUser, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AdminGetTotalCount not implemented")
}

func RegisterUserServiceServer(s *grpc.Server, srv UserServiceServer) {
	s.RegisterService(&_UserService_serviceDesc, srv)
}

func _UserService_SignUp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetItQECRegister)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).SignUp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userproto.UserService/SignUp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).SignUp(ctx, req.(*GetItQECRegister))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_GetUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).GetUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userproto.UserService/GetUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).GetUser(ctx, req.(*User))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_UpdateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).UpdateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userproto.UserService/UpdateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).UpdateUser(ctx, req.(*User))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_RequestVerifyEmail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).RequestVerifyEmail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userproto.UserService/RequestVerifyEmail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).RequestVerifyEmail(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_RequestVerifyMobile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).RequestVerifyMobile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userproto.UserService/RequestVerifyMobile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).RequestVerifyMobile(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_RequestVerifyIdentity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VerifyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).RequestVerifyIdentity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userproto.UserService/RequestVerifyIdentity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).RequestVerifyIdentity(ctx, req.(*VerifyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_VerifyEmail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VerifyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).VerifyEmail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userproto.UserService/VerifyEmail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).VerifyEmail(ctx, req.(*VerifyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_VerifyMobile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VerifyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).VerifyMobile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userproto.UserService/VerifyMobile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).VerifyMobile(ctx, req.(*VerifyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_AdminVerifyIdentity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VerifyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).AdminVerifyIdentity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userproto.UserService/AdminVerifyIdentity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).AdminVerifyIdentity(ctx, req.(*VerifyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_AdminGetUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).AdminGetUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userproto.UserService/AdminGetUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).AdminGetUser(ctx, req.(*User))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_AdminUpdateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).AdminUpdateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userproto.UserService/AdminUpdateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).AdminUpdateUser(ctx, req.(*User))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_AdminGetTotalCount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).AdminGetTotalCount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userproto.UserService/AdminGetTotalCount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).AdminGetTotalCount(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "userproto.UserService",
	HandlerType: (*UserServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "signUp",
			Handler:    _UserService_SignUp_Handler,
		},
		{
			MethodName: "getUser",
			Handler:    _UserService_GetUser_Handler,
		},
		{
			MethodName: "updateUser",
			Handler:    _UserService_UpdateUser_Handler,
		},
		{
			MethodName: "requestVerifyEmail",
			Handler:    _UserService_RequestVerifyEmail_Handler,
		},
		{
			MethodName: "requestVerifyMobile",
			Handler:    _UserService_RequestVerifyMobile_Handler,
		},
		{
			MethodName: "requestVerifyIdentity",
			Handler:    _UserService_RequestVerifyIdentity_Handler,
		},
		{
			MethodName: "verifyEmail",
			Handler:    _UserService_VerifyEmail_Handler,
		},
		{
			MethodName: "verifyMobile",
			Handler:    _UserService_VerifyMobile_Handler,
		},
		{
			MethodName: "adminVerifyIdentity",
			Handler:    _UserService_AdminVerifyIdentity_Handler,
		},
		{
			MethodName: "adminGetUser",
			Handler:    _UserService_AdminGetUser_Handler,
		},
		{
			MethodName: "adminUpdateUser",
			Handler:    _UserService_AdminUpdateUser_Handler,
		},
		{
			MethodName: "adminGetTotalCount",
			Handler:    _UserService_AdminGetTotalCount_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user.proto",
}
